/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Telas;

import ConecBD.ConexaoBanco;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
 

/**
 *
 * @author Juliano Felipe
 */
public class MultipleTable extends javax.swing.JDialog {
    public CadastroServicos telaanterior;
    public MultipleTable parafechar;
    
    int Idservico=-1; //Id referente ao servico
    String nomeCliente=""; //Nome do cliente associado ao servico
    boolean flag=false; //Flag para determinar se os "gets" estão "prontos"
    String title=null;
    int length_row; //Num. of columns on the jTable
    
    /**
     * Creates new form MultipleTable
     */
    public MultipleTable() {
        setModal(true); //Deve ser modal para que o programa "espere a seleção na lista".
        initComponents();
        initNoicon();
                
        //Seta janela para o meio da tela, independente da resolução.
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
    }

    /**
     * 07/02/16 - Juliano Felipe Seta icone 1*1px (para "remover" icone default)
     */
    private void initNoicon() {
        Image No_ico = new BufferedImage(1, 1, BufferedImage.TYPE_INT_ARGB_PRE);
        this.setIconImage(No_ico);
        title = this.getTitle(); //Pega título do frame
    }
    
    /**
     * 07/02/16 - Juliano Felipe 
     * Construtor para ser executado quando chamado do método de serviços
     * @param telanterior Instância de tela para restauração.
     * @param columnNames Vetor de nomes para os Headers da table
     * @param placa para consulta de serviços
     */
    public MultipleTable(CadastroServicos telanterior, String[] columnNames, String placa) {
        //Chamar construtor
        this();
        this.telaanterior = telanterior;
        CreateTable (columnNames, placa);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        SelectButton = new javax.swing.JButton();
        CancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Seleção de múltiplas entradas");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTable);
        jTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        SelectButton.setText("Selecionar");
        SelectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectButtonActionPerformed(evt);
            }
        });

        CancelButton.setText("Cancelar");
        CancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(SelectButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(CancelButton))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 751, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 313, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SelectButton)
                    .addComponent(CancelButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * 07/02/16 - Juliano Felipe 
     * Seleciona o nome completo do cliente no banco de dados, table "clientes"
     * @param rowid Id da coluna referente ao cliente
     * @param Mul Connection com o banco de dados.
     * @return fullname Nome completo do cliente.
     */ 
    private String getName (int rowid, Connection Mul){
        String fullname=""; //Inicializa a variável nome
        try {
            String sql2 = "SELECT rowid, * FROM cliente WHERE rowid="+rowid;
            PreparedStatement psta = Mul.prepareStatement(sql2);
            ResultSet ra = psta.executeQuery();

            if (ra.next()){//i=linha e j=coluna
                fullname = ra.getString("nome");
                fullname += " "; //Adiciona um espaço entre o primeiro nome e o resto
                fullname += ra.getString("lname");                   
            }
            ra.close();
            psta.close();
            
            return fullname;
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro. Código: 04-07-02.", title, JOptionPane.ERROR_MESSAGE);
            System.err.println(e.getClass().getName() + ": " + e.getMessage());
        }
        return null; //Erro
    }
    
    /**
     * 07/02/16 - Juliano Felipe 
     * Preenche a matriz de dados conforme consulta no banco de dados.
     * @param placa Placa associada ao serviço.
     * @return data "Matriz" (ArrayList em que cada posição é uma ArrayList) com os dados da consulta.
     */ 
    private ArrayList<ArrayList<Object>> getData (String placa){
        ArrayList<ArrayList<Object>> data = new ArrayList<>();
        ArrayList<Object> row = new ArrayList();
        int id;
        String fullname;

        Connection Mul = ConexaoBanco.Multiple();
        try {
            String sql2 = "SELECT rowid, * FROM servico WHERE Placa=?";
            PreparedStatement pst = Mul.prepareStatement(sql2);
            pst.setString(1, placa);
            ResultSet rs = pst.executeQuery();

            while (rs.next())
            {//i=linha e j=coluna
                id = rs.getInt("Idcliente");
                fullname = getName(id,Mul);
                
                //pst = Mul.prepareStatement(sql2);
                //pst.setString(1, placa);
                //rs = pst.executeQuery();                
                
                row.add(rs.getInt("rowid"));                  
                row.add(rs.getString("Placa"));               
                row.add(rs.getString("Quilometragem"));       
                row.add(rs.getString("Modelo"));              
                row.add(rs.getBoolean ("Situacao"));                          
                row.add(fullname);                          
                row.add(rs.getInt("Idcliente"));              
                row.add(rs.getString("Obs"));                 
                
                data.add(row);
                
                System.out.println(id + "     " + fullname);
                //ids.add(rs.getInt("rowid")); 
                //String names = nome + " " + rs.getString("lname"); //O primeiro nome é o mesmo, então só resgata o "resto" e o concatena.
                //model.addElement(names); //adiciona os itens para o modelo
            }
            //jList.setModel(model);

            rs.close();
            pst.close();
            Mul.close();
            
            return data;
        } catch (Exception e) {
            //JOptionPane.showMessageDialog(this, "Erro. Código: 04-07-01.", title, JOptionPane.ERROR_MESSAGE);
            //System.err.println(Arrays.toString(e.getStackTrace()));
            System.err.println("04-07-01: " + e.getClass().getName() + ": " + e.getMessage());
        }
        return null; //Erro
    }
    
    /**
     * 07/02/16 - Juliano Felipe 
     * Altera a jtable conforme necessidade (número de colunas, etc)
     * @param columnNames Vetor de nomes para os Headers da table
     * @param placa para consulta de serviços
     */
    private void CreateTable (String[] columnNames, String placa){
        DefaultTableModel model = (DefaultTableModel) jTable.getModel();
        model.addColumn(columnNames);
        
        ArrayList<ArrayList<Object>> data = getData (placa);
        int i = data.size();
        int j = columnNames.length; //Gambiarra para não pegar o size do "ArrayList interno"
        int n,k;
        length_row = j;
       
        Object[] list=null;
        for (n=0; n<i; n++){
            list[n] = data.get(n);
            /*for (k=0; k<j; k++){
                list[k] = data[n][k];
                //data.get(3)
            } */
            model.addRow(data);
        }
        jTable.setModel(model);
    }
    
    /**
     * 10/02/16 - Juliano Felipe 
     * Função para tornar String selecionada acessível
     * @return ret String selecionada na lista
     */
    public String getNomeCliente (){
        if (flag)
           return nomeCliente;
        else
            return null;
    }
    
    /**
     * 10/02/16 - Juliano Felipe 
     * Função para tornar id acessível
     * @return id Id associado à string selecionada na lista
     */
    public int getIdservico (){
        if (flag)
           return Idservico;
        else
            return -1;
    }
    
    private void SelectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectButtonActionPerformed
        int row = jTable.getSelectedRow(); 
        System.out.println("ROW " + row);
        DefaultTableModel model = (DefaultTableModel) jTable.getModel();
        
        Object[] rowData=null;
        for (int i=0; i<length_row; i++){ //For para copiar o vetor selecionado.
            rowData[i] = model.getValueAt(row, i);
            System.out.println("ROW DATA: " +rowData[i]);
        }
        
        //If "chamado por servico", setar "Idservico" e "nomeCliente"
        Idservico = Integer.parseInt(rowData[0].toString());
        nomeCliente = rowData[5].toString();
        
        parafechar=this; //Para salvar a instância desta tela
        this.setVisible(false); //Apenas esconde a tela para acessar as variáveis nas outras telas
        telaanterior.setEnabled(true);
        telaanterior.requestFocus(); //Traz o foco para tela anterior
        flag=true;
    }//GEN-LAST:event_SelectButtonActionPerformed

    private void CancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelButtonActionPerformed
        this.dispose();
        telaanterior.setEnabled(true);
        telaanterior.requestFocus(); //Traz o foco para tela anterior
    }//GEN-LAST:event_CancelButtonActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        this.dispose();
        telaanterior.setEnabled(true);
        telaanterior.requestFocus(); //Traz o foco para tela anterior
    }//GEN-LAST:event_formWindowClosed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MultipleTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MultipleTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MultipleTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MultipleTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MultipleTable().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CancelButton;
    private javax.swing.JButton SelectButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable;
    // End of variables declaration//GEN-END:variables
}
